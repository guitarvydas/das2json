swib {
  main = spaces rule rule* defaction*
  rule =
    | ":" spaces rulename "^=" spaces pattern+ -- return_value
    | ":" spaces rulename "@=" spaces pattern+ -- rewrite_value

  defaction =
    | "@" spaces rulename "=" spaces action+ spaces

  pattern = stringMatch | endop | cond | peekcond | cycle | rulecall

  endop = "_end" spaces

  rulename = name spaces

  rulecall = name spaces

  stringMatch = string spaces
  
  string = dq notdq* dq
  dq = "\""
  notdq =
    | "\\" any -- escaped
    | ~dq any -- raw

  cond = "[" spaces condClause+ "]" spaces
  peekcond = "[*" spaces peekCondClause+ "]" spaces
  peekCondClause = "|" spaces peekCondMatch ":" spaces matchaction*
  condClause = "|" spaces condMatch ":" spaces matchaction*
  condMatch =
    | string -- string
    | endop -- endop
    | "*" -- else
  peekCondMatch =
    | string -- string
    | endop -- endop
    | "*" -- else
  matchaction = break | acceptAndAppend | pattern
  break = "_break" spaces
  acceptAndAppend = "." spaces

  cycle = "<<<" spaces pattern+ ">>>" spaces

  name = firstLetter moreLetter*
  firstLetter = letter | "_"
  moreLetter = digit | firstLetter

  action =
    | "_return_value" spaces -- return_value
}
